[project]
name = "ghostwriter"
version = "0.1.0"
description = "Learn to generate song lyrics."
authors = [
    { name = "Nick Wall", email = "46641379+walln@users.noreply.github.com" }
]
dependencies = [
    "typer>=0.12.3",
    "pydantic>=2.7.1",
    "lyricsgenius>=3.0.1",
    "datasets>=2.19.1",
    "transformers @ git+https://github.com/huggingface/transformers",
    "peft>=0.10.0",
    "trl>=0.8.6",
    "bitsandbytes>=0.43.1",
    "hqq>=0.1.7.post2",
]
readme = "README.md"
requires-python = ">= 3.8"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pre-commit>=3.7.0",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/ghostwriter"]

[tool.ruff]
src = ["src/**"]

[tool.ruff.lint]
pydocstyle.convention = "google"
# See all rules at https://docs.astral.sh/ruff/rules/
select = [
    "E",      # pycodestyle
    "W",      # pycodestyle
    "F",      # Pyflakes
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "D",      # pydocstyle
    "I",      # isort
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "TID",    # flake8-tidy-imports
    "UP",     # pyupgrade
    "PT",     # flake8-pytest-style
    "RUF",    # Ruff-specific rules
    "FBT001", # flake8-boolean-trap
]

ignore = [
    "E501", # "Line too long"
    # -> line length already regulated by the formatter
    "SIM102", # "Use a single `if` statement instead of nested `if` statements"
    # -> too restrictive
]

[tool.rye.scripts]
cli = { cmd = "python src/ghostwriter/cli.py", env-file = ".env" }
